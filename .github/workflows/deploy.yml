name: Deploy to DigitalOcean App Platform

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:  # Allow manual triggers

env:
  DO_APP_ID: ${{ secrets.DO_APP_ID }}  # Set this in GitHub repo secrets

jobs:
  deploy:
    name: Deploy to App Platform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Validate app spec
        run: |
          echo "Validating .do/app.yaml..."
          if ! doctl apps spec validate .do/app.yaml; then
            echo "App spec validation failed"
            exit 1
          fi
          echo "App spec is valid"

      - name: Deploy to App Platform
        run: |
          if [ -z "$DO_APP_ID" ]; then
            echo "Creating new app..."
            doctl apps create --spec .do/app.yaml --wait
          else
            echo "Updating existing app: $DO_APP_ID"
            doctl apps update $DO_APP_ID --spec .do/app.yaml --wait
          fi

      - name: Get app URL
        id: get-url
        run: |
          APP_URL=$(doctl apps list --format DefaultIngress --no-header | head -1)
          echo "app_url=$APP_URL" >> $GITHUB_OUTPUT
          echo "App deployed to: https://$APP_URL"

      - name: Health check
        run: |
          APP_URL="${{ steps.get-url.outputs.app_url }}"

          # Wait for app to be ready
          echo "Waiting for app to be ready..."
          for i in {1..30}; do
            if curl -f -s "https://$APP_URL/api/health" > /dev/null; then
              echo "App is healthy!"
              exit 0
            fi
            echo "Attempt $i/30: App not ready yet, waiting..."
            sleep 10
          done

          echo "Health check failed after 5 minutes"
          exit 1

  notify:
    name: Notify on deployment
    runs-on: ubuntu-latest
    needs: deploy
    if: always()

    steps:
      - name: Send notification
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "Deployment successful!"
            # Add your notification logic here (Slack, Discord, email, etc.)
          else
            echo "Deployment failed!"
            # Add your failure notification logic here
          fi
